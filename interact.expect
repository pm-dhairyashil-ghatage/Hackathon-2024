#!/usr/bin/expect


# Set a timeout for each expect command. Adjust as necessary.
set timeout 120

# Ensure the correct number of arguments are provided.
if { $argc != 5} {
    send_user "Usage: $argv0 auth_key mode index 'question'\n"
    exit 1
  }

  # Retrieve command-line arguments.
  set auth_key [lindex $argv 0]
  set mode [lindex $argv 1]
  set index [lindex $argv 2]
  set question [lindex $argv 3]
  set c [lindex $argv 4]

# Get the current working directory
set current_dir [exec pwd]

# Specify the output file path for saving the response
set output_file "${current_dir}/output/final_response.txt"


# Launch bito with the specified key and mode.
spawn bito -k $auth_key -m $mode
sleep 1
# Wait for bito to be ready for input.
expect "bito>"

# Navigate to the index selection.
send "/localcode selectindex\r"
sleep 2
expect "Choose a index to load:"
send "$index\r"

sleep 2
expect "Your selected index: "


# Ensure we're back at the bito prompt before sending the question.
expect "bito>"

# Send the question and the signal to end input.
send "$question\r"
send "\004"

# Wait for and capture the final response.
expect "bito response>"


# Capture everything until back to bito prompt to ensure we get the complete response.
expect "bito>"
set final_response $expect_out(buffer)

# Open the specified output file in write mode
set file [open $output_file $c]

# puts $file $question
# Write the full output (stored in final_response) to the file
puts $file $final_response

# Close the file to ensure the output is saved
close $file

# Inform the user the response has been saved
send_user "Response has been saved to $output_file\n"

# Exit the script gracefully.
send "quit\r"
send "\004"
expect eof
